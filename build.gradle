plugins {
    id 'java'
}

group = 'me.SansNom'
version = '0.0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/public/' }  // Spigot repository
    maven { url 'https://libraries.minecraft.net/' }  // Minecraft dependencies (for NMS)
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/releases/'
    }
}

dependencies {
    compileOnly 'org.bukkit:bukkit:1.21.3-R0.1-SNAPSHOT'  // Example for Bukkit 1.20.1
    compileOnly 'org.spigotmc:spigot-api:1.21.3-R0.1-SNAPSHOT'  // Spigot API dependency (adjust version accordingly)
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
    compileOnly 'me.clip:placeholderapi:2.11.6'  // PlaceholderAPI dependency
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
